# Generated by Selenium IDE
import pytest
import time
import json

from pytest_selenium import selenium
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


@pytest.fixture
def drag():
    val = dict({'authorization': 'Basic bm9ibGVfdGVhbTppdCB3YXMgdGhlIGJsdXJzdCBvZiB0aW1lcw=='})
    driver = selenium()
    driver.header_overrides = val


def test_drag(driver):
    driver.get("https://noble_team:it was the blurst of times@staging.internal.noble.ai")
    driver.find_element(By.NAME, "username").send_keys("shailaza.dhakal@noble.ai")
    driver.find_element(By.NAME, "password").send_keys("Winter20")
    driver.find_element(By.CSS_SELECTOR, ".button--primary").click()
    # driver.get("https://staging.internal.noble.ai/blueprint")
    time.sleep(20)
    WebDriverWait(driver, 30000).until(
        expected_conditions.visibility_of_element_located((By.XPATH, "//span[@class='profile-image-letter']")))
    ActionChains(driver).move_to_element(driver.find_element(By.XPATH, "//span[@class='profile-image-letter']")).perform()
    time.sleep(3)
    driver.find_element(By.XPATH, "//li[2]//a[1]").click()
    time.sleep(6)
    handles = driver.window_handles
    driver.switch_to.window(handles[1])
    WebDriverWait(driver, 30000).until(
        expected_conditions.visibility_of_element_located((By.XPATH, "//span[contains(text(),\'Expand\')]")))
    driver.find_element(By.NAME, "collections").click()
    dropdown = driver.find_element(By.NAME, "collections")
    dropdown.find_element(By.XPATH, "//option[. = '170 : \"automation_collection1\"']").click()
    driver.find_element(By.NAME, "collections").click()
    element = driver.find_element(By.CSS_SELECTOR, ".organize-collection-tree")
    actions = ActionChains(driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = driver.find_element(By.CSS_SELECTOR, ".organize-collection-tree")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    element = driver.find_element(By.CSS_SELECTOR, ".organize-collection-tree")
    actions = ActionChains(driver)
    actions.move_to_element(element).release().perform()
    WebDriverWait(driver, 30000).until(expected_conditions.visibility_of_element_located(
        (By.XPATH, "//span[@title=\'Cluster: automation_cluster1\']")))
    driver.find_element(By.CSS_SELECTOR, ".rc-tree-treenode-switcher-close:nth-child(2) .rc-tree-title").click()
    time.sleep(2)
    WebDriverWait(driver, 30000).until(
        expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".rc-tree-node-selected.draggable")))
    dragged = driver.find_element(By.CSS_SELECTOR, ".rc-tree-node-selected.draggable")
    dropped = driver.find_element(By.XPATH, "//span[@title=\'Cluster: automation_cluster1\']")
    actions = ActionChains(driver)
    # actions.drag_and_drop(dragged, dropped).perform()
    actions.click_and_hold(dragged)
    actions.move_to_element(driver.find_element(By.XPATH, "//a[contains(@class,'menu-logo')]//img"))
    time.sleep(2)
    actions.move_to_element(dropped)
    # time.sleep(2)
    actions.release()
    actions.perform()
    time.sleep(2)
    WebDriverWait(driver, 30000).until(
        expected_conditions.invisibility_of_element_located((By.CSS_SELECTOR, ".rc-tree-node-selected.draggable")))

